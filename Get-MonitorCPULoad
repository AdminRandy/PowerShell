param (
    [Parameter(Mandatory = $true, Position = 0)]
    [Alias("etsn")]
    [string]$Server
)

function Get-SystemStatus {
    if (Test-Connection -ComputerName $Server -Quiet) {
        $systemInfo = Invoke-Command -ComputerName $Server -ScriptBlock {
            $system = Get-WmiObject Win32_OperatingSystem
            $cpuUsage = (Get-WmiObject Win32_Processor | Measure-Object -Property LoadPercentage -Average).Average

            [PSCustomObject]@{
                "DateTime" = Get-Date -Format "yyyy-MM-dd HH:mm:ss"
                "CPU" = "{0:N2}" -f $cpuUsage
            }
        }

        $systemInfoStr = "$($systemInfo.DateTime) > CPU: $($systemInfo.CPU) %"
        Write-Host $systemInfoStr -ForegroundColor Red
    } else {
        Write-Host "Unable to connect to the server: $Server" -ForegroundColor Red
    }
}

function Get-HighestCPUService {
    if (Test-Connection -ComputerName $Server -Quiet) {
        $highestCPUProcess = Invoke-Command -ComputerName $Server -ScriptBlock {
            Get-Process | Where-Object { $_.CPU -gt 0 } | Sort-Object -Descending CPU | Select-Object -First 1
        }

        if ($highestCPUProcess) {
            $serviceName = Get-WmiObject -Class Win32_Service -Filter "ProcessId = $($highestCPUProcess.Id)" -ComputerName $Server | Select-Object -ExpandProperty Name
            $commandLine = (Get-WmiObject -Class Win32_Process -Filter "ProcessId = $($highestCPUProcess.Id)" -ComputerName $Server).CommandLine
            $highestCPUServiceStr = "Highest CPU Service: $($highestCPUProcess.Name) (Service: $serviceName, `nPath: $commandLine)"
            Write-Host $highestCPUServiceStr -ForegroundColor Green
        } else {
            Write-Host "No running processes with CPU usage found on $Server" -ForegroundColor Red
        }
    } else {
        Write-Host "Unable to connect to the server: $Server" -ForegroundColor Red
    }
}

while ($true) {
    Get-SystemStatus
    Get-HighestCPUService
    Start-Sleep -Seconds 2
}
