param([Parameter(Mandatory=$true,Position=0)][Alias("etsn")][string]$Server);function Get-SystemStatus{if(Test-Connection -ComputerName $Server -Quiet){$systemInfo=Invoke-Command -ComputerName $Server -ScriptBlock{$cpuUsage=(Get-WmiObject Win32_Processor|Measure-Object -Property LoadPercentage -Average).Average;[PSCustomObject]@{Server=$Server;Time=Get-Date -Format "HH:mm:ss";CPU="$cpuUsage%"}};$systemInfo}}function Get-HighestCPUService{if(Test-Connection -ComputerName $Server -Quiet){$highestCPUProcess=Invoke-Command -ComputerName $Server -ScriptBlock{Get-Process|Where-Object{$_.CPU -gt 0}|Sort-Object -Descending CPU|Select-Object -First 1};if($highestCPUProcess){$serviceName=Get-WmiObject -Class Win32_Service -Filter "ProcessId = $($highestCPUProcess.Id)" -ComputerName $Server|Select-Object -ExpandProperty Name;$commandLine=(Get-WmiObject -Class Win32_Process -Filter "ProcessId = $($highestCPUProcess.Id)" -ComputerName $Server).CommandLine;@{Server=$Server;HighestCPUService=$highestCPUProcess.Name;ServicePath=$commandLine}}}}while($true){$systemStatus=Get-SystemStatus;$highestCPUService=Get-HighestCPUService;$systemStatusStr="$($systemStatus.Server) | Time: $($systemStatus.Time) | CPU: $($systemStatus.CPU)";Write-Host $systemStatusStr -ForegroundColor Red;if($highestCPUService.HighestCPUService){$highestCPUServiceStr="$($highestCPUService.Server) | Highest CPU Service: $($highestCPUService.HighestCPUService) | Service Path: $($highestCPUService.ServicePath)";Write-Host $highestCPUServiceStr -ForegroundColor Green}Start-Sleep -Seconds 1}
